#ifndef __SHOWDLG_H__
#define __SHOWDLG_H__
#include "explorer.h"
#include "finddlg.h"

const DWORD MAX_SHOWDLGS = 50;

const DWORD IDC_VIEW_RICHEDIT  = 1;
const DWORD IDC_VIEW_STATUSBAR = 2;

// wParam, lParam - not used; return value - not used
const DWORD WM_FINALCREATE  = WM_USER + 12; 
// wParam, lParam - not used; return: 1 - OK, 0 - FAIL
const DWORD WM_LOADRICHEDIT = WM_USER + 13; 
// wParam, lParam - not used; return value - not used
const DWORD WM_SHOWCARETPOS = WM_USER + 14; 
// wParam = buf, lParam = buflen; return: 1 - OK, 0 - FAIL
const DWORD WM_LOADBUFFER   = WM_USER + 15; 
// wParam, lParam - not used; return value - not used
const DWORD WM_LOCATEWINDOW = WM_USER + 16;


enum CODE_ENUM {CODE_CP1251, CODE_KOI8};

const char szCodeName[2][20] = {"CP-1251", "KOI8"};

const BYTE CodeTables[2][128] = 
{	
	{	// CP-1251 -> CP1-1251 (Are you sure?:)   
		0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x8D, 0x8E, 0x8F, 
		0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9A, 0x9B, 0x9C, 0x9D, 0x9E, 0x9F, 
		0xA0, 0xA1, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6, 0xA7, 0xA8, 0xA9, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAF, 
		0xB0, 0xB1, 0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF, 
		0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 
		0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0xDF, 
		0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 
		0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF 
	}
	,
	{	// KOI8-r -> CP1251
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xA0, 0x20, 0xB0, 0x20, 0xB7, 0x20,
		0x20, 0x20, 0x20, 0xB8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
		0x20, 0x20, 0x20, 0xA8, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xA9,
		0xFE, 0xE0, 0xE1, 0xF6, 0xE4, 0xE5, 0xF4, 0xE3, 0xF5, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE,
		0xEF, 0xFF, 0xF0, 0xF1, 0xF2, 0xF3, 0xE6, 0xE2, 0xFC, 0xFB, 0xE7, 0xF8, 0xFD, 0xF9, 0xF7, 0xFA,
		0xDE, 0xC0, 0xC1, 0xD6, 0xC4, 0xC5, 0xD4, 0xC3, 0xD5, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE,
		0xCF, 0xDF, 0xD0, 0xD1, 0xD2, 0xD3, 0xC6, 0xC2, 0xDC, 0xDB, 0xC7, 0xD8, 0xDD, 0xD9, 0xD7, 0xDA
	},
};


typedef struct tag_DLGDATA
{
	HWND hView;
	HWND hEdit;
	HWND hBar;
	char *lpBuf;
	DWORD cbBuf;
	BOOL bEmpty;
	CODE_ENUM code;
	char szFindText[MAX_FINDTEXT];
	DWORD dwFindOptions;
	WINDOWPLACEMENT wndpl;
} DLGDATA;

const DWORD HISTORYSIZE = 10;

void create_view(explorer *e, BYTE *buf, DWORD buflen, char *filename);

#endif //__SHOWDLG_H__